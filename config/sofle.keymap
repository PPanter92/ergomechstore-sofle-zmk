/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&lt {
    tapping-term-ms = <175>;
    flavor = "balanced";
    quick-tap-ms = <40>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "LM";
        };

        curly: curly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N7) &kp RA(N0) &kp LEFT>;
            label = "CURLY";
        };

        paran: paran {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N8) &kp LS(N9) &kp LEFT>;
            label = "PARAN";
        };

        angle: angle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NON_US_BACKSLASH &kp LS(NON_US_BACKSLASH) &kp LEFT>;
            label = "angle";
        };

        brackets: brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N8) &kp RA(N9) &kp LEFT>;
            label = "BRACKETS";
        };

        abs: abs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(NON_US_BACKSLASH) &kp RA(NON_US_BACKSLASH) &kp LEFT>;
            label = "ABS";
        };

        comO: comO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N7) &kp LS(RIGHT_BRACKET)>;
            label = "COMO";
        };

        comC: comC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RIGHT_BRACKET) &kp LS(N7)>;
            label = "COMC";
        };

        code: code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(EQUAL) &kp LS(EQUAL) &kp LS(EQUAL) &kp SPACE>;
            label = "CODE";
        };

        quote: quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N2) &kp LS(N2) &kp LEFT>;
            label = "QUOTE";
        };

        squote: squote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NON_US_HASH) &kp LS(NON_US_HASH) &kp LEFT>;
            label = "SQUOTE";
        };

        max: max {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp X>;
            label = "MAX";
        };

        min: min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp N>;
            label = "MIN";
        };

        res: res {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp R>;
            label = "RES";
        };
    };

    behaviors {
        bs_TAB: bs_TAB {
            compatible = "zmk,behavior-tap-dance";
            label = "BS_TAB";
            #binding-cells = <0>;
            bindings = <&lt 4 BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <50>;
        };

        rt_NAV: rt_NAV {
            compatible = "zmk,behavior-tap-dance";
            label = "RT_NAV";
            #binding-cells = <0>;
            bindings = <&lt 7 RET>, <&kp RET>;

            tapping-term-ms = <50>;
        };

        del_6: del_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "DEL_6";
            #binding-cells = <0>;
            bindings = <&lt 6 DEL>, <&kp RET>;

            tapping-term-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE      &kp N1                &kp N2  &kp N3        &kp N4     &kp N5                                         &kp N6     &kp N7       &kp N8        &kp N9     &kp N0      &kp MINUS
&kp TAB        &kp Q                 &kp W   &kp E         &kp R      &kp T                                          &kp Y      &kp U        &kp I         &kp O      &kp P       &kp LEFT_BRACKET
&kp CAPS       &kp A                 &kp S   &kp D         &kp F      &kp G                                          &kp H      &kp J        &kp K         &kp L      &kp SEMI    &kp SQT
&kp RIGHT_ALT  &kp NON_US_BACKSLASH  &kp Z   &kp X         &kp C      &kp V           &kp K_MUTE    &mkp MB3         &kp B      &kp N        &kp M         &kp COMMA  &kp PERIOD  &kp SLASH
                                     &mo 1   &kp LEFT_GUI  &kp LCTRL  &kp LEFT_SHIFT  &lt 6 DEL     &lt 4 BACKSPACE  &kp SPACE  &lt 7 ENTER  &kp LEFT_ALT  &mo 2
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&studio_unlock  &kp F1     &kp F2          &kp F3       &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE       &kp N1     &kp N2          &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans          &kp EXCL   &kp AT          &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans          &kp EQUAL  &kp MINUS       &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                           &studio_unlock  &trans       &trans    &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans    &trans    &trans     &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                          &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };

        tab {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1           &mkp MB3    &mkp MB2     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &max    &kp LS(LC(PG_UP))  &lm 5 LALT  &kp K_APP    &trans     &kp LA(F4)
&trans  &trans  &trans  &trans  &trans  &trans                    &res    &kp LS(LC(TAB))    &trans      &kp LC(TAB)  &kp LG(D)  &kp LC(W)
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &min    &trans             &trans      &trans       &trans     &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans             &trans      &trans
            >;

            label = "tab";
        };

        tab2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans       &trans  &trans   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans       &trans  &trans   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LS(TAB)  &trans  &kp TAB  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans       &trans  &trans   &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans       &trans  &trans
            >;

            label = "tab2";
        };

        symbols {
            bindings = <
&trans  &trans  &trans             &trans  &trans  &trans                     &trans         &paran     &code       &kp RA(RIGHT_BRACKET)  &trans  &trans
&trans  &trans  &trans             &trans  &trans  &trans                     &kp RA(MINUS)  &angle     &kp LS(N0)  &kp LS(MINUS)          &comO   &comC
&trans  &trans  &kp LS(RA(MINUS))  &trans  &trans  &trans                     &abs           &curly     &kp RA(N7)  &kp RA(N0)             &quote  &squote
&trans  &trans  &trans             &trans  &trans  &trans  &trans    &trans   &trans         &brackets  &kp RA(N8)  &kp RA(N9)             &trans  &trans
                &trans             &trans  &trans  &trans  &trans    &kp DEL  &trans         &trans     &trans      &trans
            >;

            label = "symbols";
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &kp LC(HOME)  &kp K_APPLICATION  &kp LC(END)    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp HOME   &kp LC(LEFT)  &kp UP_ARROW       &kp LC(RIGHT)  &kp END    &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_UP  &kp LEFT      &kp LS(TAB)        &kp RIGHT      &kp DOWN   &kp TAB
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PG_DN  &kp LC(A)     &kp LC(X)          &kp LC(C)      &kp LC(V)  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans        &trans             &trans
            >;

            label = "nav";
        };
    };
};
